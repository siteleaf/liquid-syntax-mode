%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: HTML (Liquid)
file_extensions:
  - liquid
scope: text.html.liquid
contexts:
  main:
    - match: '{%-?\s*comment\s*-?%}'
      push:
        - meta_scope: comment.block.liquid
        - match: '{%-?\s*endcomment\s*-?%}'
          pop: true
    - match: "{{-?"
      push:
        - meta_scope: punctuation.output.liquid
        - match: "-?}}"
          pop: true
        - include: template_var
    - match: "{%-?"
      push:
        - meta_scope: punctuation.tag.liquid
        - match: "-?%}"
          pop: true
        - include: template_tag_name
        - include: template_var
    - include: scope:text.html.basic
    - include: scope:source.json
    - include: scope:source.js
    - include: scope:source.css
  assign_op:
    - match: /=
      scope: keyword.operator.assignment.augmented.liquid
  logic_expression:
    - match: /=
      scope: keyword.operator.assignment.augmented.liquid
  logic_op:
    - match: \s+(and|or|not|contains|(\!\=|\=\=|<\=|>\=|<|>)\s+
      scope: keyword.operator.logical.liquid
  template_tag_name:
    - match: '(?<={%)\s*(\w+)'
      scope: entity.name.tag.liquid
    - match: '(?<={%-)\s*(\w+)'
      scope: entity.name.tag.liquid
  template_var:
    - match: '(\[)(\|)(?=[^\]]*)(?=\])'
      captures:
        2: invalid.illegal.filter.liquid
        3: invalid.illegal.filter.liquid
    - match: (?<=\s)(\+|\-|\/|\*)(?=\s)
      scope: invalid.illegal.filter.liquid
    - match: (false|true|nil)
      scope: constant.language.liquid
    - match: '(?=if|unless|elsif)\s*[^%}]+\s(in)\s'
      captures:
        3: invalid.illegal.operator.liquid
    - match: \s+(and|or|not|contains|in|by|((\!|\=|\<|\>)\=))\s+
      scope: keyword.operator.liquid
    - match: '(?<=assign)([^\=]+)(\=\=+)'
      captures:
        2: invalid.illegal.assignment.liquid
    - match: '\|\s+(?![\.0-9])[a-zA-Z0-9_-]+\:\s+'
      scope: support.function.with-args.liquid
    - match: '\|\s+(?![\.0-9])[a-zA-Z0-9_-]+\s+'
      scope: support.function.without-args.liquid
    - match: (?<=\s)(with|offset\:|limit\:)(?=\s)
      scope: keyword.control.liquid
    - match: (?<=include)(.*)(with\:|offset|limit)(?=\s)
      captures:
        2: invalid.illegal.argument.liquid
    - match: (?<=\s)(\w+\:)(?=\:\s)
      scope: invalid.illegal.liquid
    - match: '"'
      push:
        - meta_scope: string.quoted.double.liquid
        - match: '"'
          pop: true
    - match: "'"
      push:
        - meta_scope: string.quoted.single.liquid
        - match: "'"
          pop: true
    - match: '(-|\+)?\s*[0-9]+(\.[0-9]+)?'
      scope: constant.numeric.liquid
    - match: \b(collection|product|linklist|linklists|order|link|customer|customer_address|line_item|shop|collections|page_title|template|image|blog|blogs|cart|pages|theme|themes|variant|items|comment|forloop|settings|schema|javascript|stylesheet)\b
      scope: support.class.liquid
    - match: \b(assets|author|body|body_raw|current|date|excerpt_raw|meta|next|pages|parent|posts|previous|site|tags|taxonomy|title|url)\b
      scope: support.class.liquid
    - match: ((?<=\w\:\s)\w+)
      scope: variable.parameter.liquid
    - match: (?<=\.)\w+\b
      scope: support.variable.liquid
    - match: \w+
      scope: variable.other.liquid
